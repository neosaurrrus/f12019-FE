{"version":3,"file":"static/webpack/static/development/pages/index.js.3088bad1762bad3320e4.hot-update.js","sources":["webpack:///./components/UpdateTeam.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql, compose} from 'react-apollo'\r\nimport { UPDATE_TEAM_MUTATION, GET_TEAMS_QUERY, GET_TEAM_QUERY } from '../queries/queries'\r\n\r\nclass UpdateTeam extends Component {\r\n\r\n\r\n    state = {\r\n        name:  null,\r\n        founded:  null,\r\n        teamId: null\r\n    }\r\n   \r\n    \r\n    handleChange = (event) => {\r\n        let { name, value, type} = event.target\r\n        if (type===\"number\") value = Number(value)\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    getTeams() {\r\n        let data = this.props.GET_TEAMS_QUERY;\r\n        if (data.loading) {\r\n            console.log(\"Loading teams\")\r\n        } else {\r\n        return this.props.GET_TEAMS_QUERY.teams.map(team => {\r\n                return (<option name=\"teamId\" key={team.id} value={team.id}>{team.name}</option>)\r\n            })\r\n        }\r\n    }\r\n\r\n    setTeam = (event) => {\r\n        event.preventDefault();\r\n        console.log(event.target)\r\n        let selectedTeam = this.props.GET_TEAMS_QUERY.teams.find(team => {\r\n            return team.id === this.state.teamId\r\n        })\r\n        // if (!selectedTeam) return;\r\n        this.setState({\r\n            teamId: selectedTeam,\r\n            name: selectedTeam.name,\r\n            founded: selectedTeam.founded\r\n        })\r\n        \r\n    }\r\n    \r\n    updateTeam = (event) => {\r\n        event.preventDefault();\r\n        this.props.UPDATE_TEAM_MUTATION({\r\n            variables: {\r\n                id: this.state.teamId,\r\n                name: this.state.name,\r\n                founded: this.state.founded\r\n            }, refetchQueries: [{ query: GET_TEAMS_QUERY }]\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <form onSubmit={this.setTeam}>\r\n                <div className=\"field\">\r\n                    <label>Team</label>\r\n                    <select onChange={(e) => {\r\n                        this.setState({\r\n                            teamId: e.target.value,\r\n                        })\r\n                    }}>\r\n                        <option name=\"select\" key={\"default\"} value={\"none\"}>Select Team</option>\r\n                        {this.getTeams()}\r\n                    </select>\r\n                    <button>Select</button>\r\n                </div>\r\n            </form>\r\n            <form onSubmit={this.updateTeam}>\r\n                <div className=\"field\">\r\n                    <label>Team Name:</label>\r\n                    <input\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Founded:</label>\r\n                    <input\r\n                        name=\"founded\"\r\n                        type=\"number\"\r\n                        value={this.state.founded}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <button>Update</button>\r\n            </form>\r\n        </div>    \r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(GET_TEAMS_QUERY, { name: \"GET_TEAMS_QUERY\" }),\r\n    graphql(UPDATE_TEAM_MUTATION, { name: \"UPDATE_TEAM_MUTATION\" }),\r\n    graphql(GET_TEAM_QUERY, { name: \"GET_TEAM_QUERY\" })\r\n)(UpdateTeam);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAHA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAcA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAIA;AAAA;AAAA;AALA;AAOA;AACA;;;;;;AApCA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AA6BA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAnGA;AACA;AAqGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}