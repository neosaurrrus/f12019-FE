{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/TeamList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    teams {\\n      name\\n      founded\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nvar GET_TEAMS_QUERY = gql(_templateObject());\n\nvar TeamList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TeamList, _Component);\n\n  function TeamList() {\n    _classCallCheck(this, TeamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TeamList).apply(this, arguments));\n  }\n\n  _createClass(TeamList, [{\n    key: \"teams\",\n    value: function teams() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \" Loading Teams\");\n      } else {\n        return data.teams.map(function (team) {\n          return React.createElement(\"li\", {\n            key: team.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, \" \", team.name, \" - \", team.founded);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"team-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.teams()));\n    }\n  }]);\n\n  return TeamList;\n}(Component);\n\nexport default graphql(GET_TEAMS_QUERY)(TeamList);","map":{"version":3,"sources":["/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/TeamList.js"],"names":["React","Component","gql","graphql","GET_TEAMS_QUERY","TeamList","data","props","loading","teams","map","team","id","name","founded"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;;IAUMG,Q;;;;;;;;;;;;;4BAEK;AACH,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,UAAGA,IAAI,CAACE,OAAR,EAAgB;AACZ,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH,OAFD,MAEO;AACH,eAAOF,IAAI,CAACG,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AAC1B,iBAAO;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoBD,IAAI,CAACE,IAAzB,SAAkCF,IAAI,CAACG,OAAvC,CAAP;AACH,SAFM,CAAP;AAGH;AACJ;;;6BACQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,KAAL,EADL,CADJ,CADJ;AAOH;;;;EApBkBR,S;;AAuBvB,eAAeE,OAAO,CAACC,eAAD,CAAP,CAAyBC,QAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { gql } from 'apollo-boost'\r\nimport { graphql } from 'react-apollo'\r\n\r\nconst GET_TEAMS_QUERY = gql`\r\n  {\r\n    teams {\r\n      name\r\n      founded\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass TeamList extends Component {\r\n\r\n    teams(){\r\n        let data = this.props.data\r\n        if(data.loading){\r\n            return <div> Loading Teams</div>\r\n        } else {\r\n            return data.teams.map(team => {\r\n                return <li key={team.id}> {team.name} - {team.founded}</li>\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul id=\"team-list\">\r\n                    {this.teams()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(GET_TEAMS_QUERY)(TeamList);"]},"metadata":{},"sourceType":"module"}