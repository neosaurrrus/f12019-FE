{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DeleteDriver.js\";\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { GET_DRIVERS_QUERY, DELETE_DRIVER_MUTATION } from '../queries/queries';\n\nvar DeleteDriver =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeleteDriver, _Component);\n\n  function DeleteDriver() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DeleteDriver);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DeleteDriver)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"delete\", function (event) {\n      var value = event.target.value;\n\n      _this.props.DELETE_DRIVER_MUTATION({\n        variables: {\n          id: value\n        },\n        refetchQueries: [{\n          query: GET_DRIVERS_QUERY\n        }]\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DeleteDriver, [{\n    key: \"drivers\",\n    value: function drivers() {\n      var _this2 = this;\n\n      var data = this.props.GET_DRIVERS_QUERY;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Fetching Drivers\");\n      } else {\n        return data.drivers.map(function (driver) {\n          return React.createElement(\"li\", {\n            key: driver.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \" \", driver.firstName, \" \", driver.lastName, \" - \", driver.nationality, \" - \", driver.team.name, \" \", React.createElement(\"button\", {\n            value: driver.id,\n            onClick: _this2.delete,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, \"Delete\"));\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"driver-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.drivers()));\n    }\n  }]);\n\n  return DeleteDriver;\n}(Component);\n\nexport default compose(graphql(GET_DRIVERS_QUERY, {\n  name: \"GET_DRIVERS_QUERY\"\n}), graphql(DELETE_DRIVER_MUTATION, {\n  name: \"DELETE_DRIVER_MUTATION\"\n}))(DeleteDriver);","map":{"version":3,"sources":["/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DeleteDriver.js"],"names":["React","Component","graphql","compose","GET_DRIVERS_QUERY","DELETE_DRIVER_MUTATION","DeleteDriver","event","value","target","props","variables","id","refetchQueries","query","data","loading","drivers","map","driver","firstName","lastName","nationality","team","name","delete"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAgC,cAAhC;AACA,SAAQC,iBAAR,EAA2BC,sBAA3B,QAAwD,oBAAxD;;IAGMC,Y;;;;;;;;;;;;;;;;;;4DAEM,E;;6DAKC,UAACC,KAAD,EAAW;AAChB,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;;AACA,YAAKE,KAAL,CAAWL,sBAAX,CAAkC;AAC9BM,QAAAA,SAAS,EAAE;AACPC,UAAAA,EAAE,EAAEJ;AADG,SADmB;AAI9BK,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAEV;AAAT,SAAD;AAJc,OAAlC;AAMH,K;;;;;;;8BAOS;AAAA;;AACN,UAAIW,IAAI,GAAG,KAAKL,KAAL,CAAWN,iBAAtB;;AACA,UAAIW,IAAI,CAACC,OAAT,EAAkB;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH,OAFD,MAEO;AACH,eAAOD,IAAI,CAACE,OAAL,CAAaC,GAAb,CAAiB,UAAAC,MAAM,EAAI;AAC9B,iBAAO;AAAI,YAAA,GAAG,EAAEA,MAAM,CAACP,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsBO,MAAM,CAACC,SAA7B,OAAyCD,MAAM,CAACE,QAAhD,SAA6DF,MAAM,CAACG,WAApE,SAAoFH,MAAM,CAACI,IAAP,CAAYC,IAAhG,OAAsG;AAAQ,YAAA,KAAK,EAAEL,MAAM,CAACP,EAAtB;AAA0B,YAAA,OAAO,EAAE,MAAI,CAACa,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAtG,CAAP;AACH,SAFM,CAAP;AAGH;AACJ;;;6BAMQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKR,OAAL,EADJ,CADJ,CADJ;AAOH;;;;EA7CsBhB,S;;AAiD3B,eAAeE,OAAO,CAClBD,OAAO,CAACE,iBAAD,EAAoB;AAAEoB,EAAAA,IAAI,EAAE;AAAR,CAApB,CADW,EAElBtB,OAAO,CAACG,sBAAD,EAAyB;AAAEmB,EAAAA,IAAI,EAAE;AAAR,CAAzB,CAFW,CAAP,CAGblB,YAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql, compose} from 'react-apollo'\r\nimport {GET_DRIVERS_QUERY, DELETE_DRIVER_MUTATION} from '../queries/queries'\r\n\r\n\r\nclass DeleteDriver extends Component {\r\n    \r\n    state = { };\r\n\r\n\r\n\r\n\r\n    delete = (event) => {\r\n        let value = event.target.value\r\n        this.props.DELETE_DRIVER_MUTATION({\r\n            variables: {\r\n                id: value\r\n            },  \r\n            refetchQueries: [{ query: GET_DRIVERS_QUERY }]\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    drivers() {\r\n        let data = this.props.GET_DRIVERS_QUERY\r\n        if (data.loading) {\r\n            return <div>Fetching Drivers</div>\r\n        } else {\r\n            return data.drivers.map(driver => {\r\n                return <li key={driver.id}> {driver.firstName} {driver.lastName} - {driver.nationality} - {driver.team.name} <button value={driver.id} onClick={this.delete}>Delete</button></li> \r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul id=\"driver-list\">\r\n                   {this.drivers()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    graphql(GET_DRIVERS_QUERY, { name: \"GET_DRIVERS_QUERY\" }),\r\n    graphql(DELETE_DRIVER_MUTATION, { name: \"DELETE_DRIVER_MUTATION\" }),\r\n)(DeleteDriver);"]},"metadata":{},"sourceType":"module"}