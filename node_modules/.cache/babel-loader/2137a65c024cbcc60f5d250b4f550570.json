{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DriverDetails.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { GET_DRIVER_QUERY } from '../queries/queries';\n\nvar DriverDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DriverDetails, _Component);\n\n  function DriverDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DriverDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DriverDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"displayDriverDetails\", function () {\n      var driver = _this.props.data.driver;\n\n      if (driver) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 13\n          },\n          __self: this\n        }, driver.firstName));\n      }\n\n      ;\n    });\n\n    return _this;\n  }\n\n  _createClass(DriverDetails, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"hi\", this.displayDriverDetails());\n    }\n  }]);\n\n  return DriverDetails;\n}(Component);\n\n;\nexport default graphql(GET_DRIVER_QUERY, {\n  options: function options(props) {\n    return {\n      variables: {\n        id: props.driverId\n      }\n    };\n  }\n})(DriverDetails);","map":{"version":3,"sources":["/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DriverDetails.js"],"names":["React","Component","graphql","GET_DRIVER_QUERY","DriverDetails","driver","props","data","firstName","displayDriverDetails","options","variables","id","driverId"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;;IAGMC,a;;;;;;;;;;;;;;;;;;2EAEoB,YAAM;AAAA,UACpBC,MADoB,GACT,MAAKC,KAAL,CAAWC,IADF,CACpBF,MADoB;;AAExB,UAAIA,MAAJ,EAAY;AACR,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,MAAM,CAACG,SAAZ,CADJ,CADJ;AAKH;;AAAA;AACJ,K;;;;;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEK,KAAKC,oBAAL,EAFL,CADJ;AAMH;;;;EAnBuBR,S;;AAsB3B;AAED,eAAeC,OAAO,CAACC,gBAAD,EAAmB;AACrCO,EAAAA,OAAO,EAAE,iBAACJ,KAAD,EAAW;AAChB,WAAO;AACHK,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAEN,KAAK,CAACO;AADH;AADR,KAAP;AAKH;AAPoC,CAAnB,CAAP,CAQZT,aARY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport {GET_DRIVER_QUERY} from '../queries/queries';\r\n\r\n\r\nclass DriverDetails extends Component {\r\n\r\n    displayDriverDetails= () => {\r\n    const { driver } = this.props.data;\r\n        if (driver) {\r\n            return (\r\n                <div>\r\n                    <h2>{driver.firstName}</h2>\r\n                </div>\r\n            );\r\n        };\r\n    };\r\n    render(){\r\n        return (\r\n            <div>\r\n                hi\r\n                {this.displayDriverDetails()}\r\n            </div>\r\n        )\r\n    }\r\n \r\n    \r\n};\r\n\r\nexport default graphql(GET_DRIVER_QUERY, {\r\n    options: (props) => {\r\n        return {\r\n            variables: {\r\n                id: props.driverId\r\n            }\r\n        }\r\n    }\r\n})(DriverDetails);"]},"metadata":{},"sourceType":"module"}