{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DriverDetails.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { GET_DRIVER_QUERY } from '../queries/queries';\n\nvar DriverDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DriverDetails, _Component);\n\n  function DriverDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DriverDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DriverDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"displayDriverDetails\", function () {\n      var driver = _this.props.data.driver;\n\n      if (driver) {\n        var filteredDrivers = driver.team.drivers.map(function (d) {\n          console.log(driver.id + \" \" + d.id);\n          if (driver.id !== d.id) return React.createElement(\"li\", {\n            key: d.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 13\n            },\n            __self: this\n          }, d.firstName, \" \", d.lastName);\n        });\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, driver.firstName, \" \", driver.lastName), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, driver.nationality), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, driver.team.name), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, driver.team.name), React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Other Teammates:\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, filteredDrivers));\n      }\n\n      ;\n    });\n\n    return _this;\n  }\n\n  _createClass(DriverDetails, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, this.displayDriverDetails());\n    }\n  }]);\n\n  return DriverDetails;\n}(Component);\n\n;\nexport default graphql(GET_DRIVER_QUERY, {\n  options: function options(props) {\n    return {\n      variables: {\n        id: props.driverId\n      }\n    };\n  }\n})(DriverDetails);","map":{"version":3,"sources":["/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DriverDetails.js"],"names":["React","Component","graphql","GET_DRIVER_QUERY","DriverDetails","driver","props","data","filteredDrivers","team","drivers","map","d","console","log","id","firstName","lastName","nationality","name","displayDriverDetails","options","variables","driverId"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;;IAGMC,a;;;;;;;;;;;;;;;;;;2EAEoB,YAAM;AAAA,UAChBC,MADgB,GACL,MAAKC,KAAL,CAAWC,IADN,CAChBF,MADgB;;AAExB,UAAIA,MAAJ,EAAY;AACR,YAAMG,eAAe,GAAGH,MAAM,CAACI,IAAP,CAAYC,OAAZ,CAAoBC,GAApB,CAAwB,UAAAC,CAAC,EAAI;AACjDC,UAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,EAAP,GAAY,GAAZ,GAAkBH,CAAC,CAACG,EAAhC;AACA,cAAGV,MAAM,CAACU,EAAP,KAAYH,CAAC,CAACG,EAAjB,EAAqB,OAAO;AAAI,YAAA,GAAG,EAAEH,CAAC,CAACG,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAgBH,CAAC,CAACI,SAAlB,OAA8BJ,CAAC,CAACK,QAAhC,CAAP;AACxB,SAHuB,CAAxB;AAKA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKZ,MAAM,CAACW,SAAZ,OAAwBX,MAAM,CAACY,QAA/B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKZ,MAAM,CAACa,WAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKb,MAAM,CAACI,IAAP,CAAYU,IAAjB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKd,MAAM,CAACI,IAAP,CAAYU,IAAjB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIX,eAAJ,CANJ,CADJ;AAWH;;AAAA;AACJ,K;;;;;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKY,oBAAL,EADL,CADJ;AAKH;;;;EA7BuBnB,S;;AA8B3B;AAED,eAAeC,OAAO,CAACC,gBAAD,EAAmB;AACrCkB,EAAAA,OAAO,EAAE,iBAACf,KAAD,EAAW;AAChB,WAAO;AACHgB,MAAAA,SAAS,EAAE;AACPP,QAAAA,EAAE,EAAET,KAAK,CAACiB;AADH;AADR,KAAP;AAKH;AAPoC,CAAnB,CAAP,CAQZnB,aARY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport {GET_DRIVER_QUERY} from '../queries/queries';\r\n\r\n\r\nclass DriverDetails extends Component {\r\n\r\n    displayDriverDetails= () => {\r\n        const { driver } = this.props.data;\r\n        if (driver) {\r\n            const filteredDrivers = driver.team.drivers.map(d => {\r\n                console.log(driver.id + \" \" + d.id)\r\n                if(driver.id!==d.id) return <li key={d.id}>{d.firstName} {d.lastName}</li>\r\n            })\r\n    \r\n            return (\r\n                <div>\r\n                    <h2>{driver.firstName} {driver.lastName}</h2>\r\n                    <h3>{driver.nationality}</h3>\r\n                    <h4>{driver.team.name}</h4>\r\n                    <h4>{driver.team.name}</h4>\r\n                    <b>Other Teammates:</b>\r\n                    <p>{filteredDrivers}</p>\r\n\r\n                </div>\r\n            );\r\n        };\r\n    };\r\n    render(){\r\n        return (\r\n            <div>\r\n                {this.displayDriverDetails()}\r\n            </div>\r\n        )\r\n    }  \r\n};\r\n\r\nexport default graphql(GET_DRIVER_QUERY, {\r\n    options: (props) => {\r\n        return {\r\n            variables: {\r\n                id: props.driverId\r\n            }\r\n        }\r\n    }\r\n})(DriverDetails);"]},"metadata":{},"sourceType":"module"}