{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/UpdateTeam.js\";\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { UPDATE_TEAM_MUTATION, GET_TEAMS_QUERY, GET_TEAM_QUERY } from '../queries/queries';\n\nvar UpdateTeam =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateTeam, _Component);\n\n  function UpdateTeam() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateTeam);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateTeam)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: \"none\",\n      founded: null,\n      teamId: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value,\n          type = _event$target.type;\n      if (type === \"number\") value = Number(value);\n\n      _this.setState(_defineProperty({}, name, value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTeamDetails\", function () {\n      var selectedTeam = _this.props.GET_TEAMS_QUERY.teams.find(function (team) {\n        console.log(team.id + \" \" + _this.state.teamId);\n        return team.id === _this.state.teamId;\n      });\n\n      if (selectedTeam) {\n        _this.setState({\n          name: selectedTeam.name,\n          founded: selectedTeam.founded\n        }, console.log(_this.state.name));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitForm\", function (event) {\n      event.preventDefault();\n\n      _this.props.UPDATE_TEAM_MUTATION({\n        variables: {\n          name: _this.state.name,\n          founded: _this.state.founded\n        },\n        refetchQueries: [{\n          query: GET_TEAMS_QUERY\n        }]\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UpdateTeam, [{\n    key: \"showTeams\",\n    value: function showTeams() {\n      var data = this.props.GET_TEAMS_QUERY;\n\n      if (data.loading) {\n        console.log(\"Loading teams\");\n      } else {\n        this.getTeamDetails();\n        return this.props.GET_TEAMS_QUERY.teams.map(function (team) {\n          return React.createElement(\"option\", {\n            name: \"teamId\",\n            key: team.id,\n            value: team.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, team.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.submitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Team\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            teamId: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.showTeams())), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Team Name:\"), React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Founded:\"), React.createElement(\"input\", {\n        name: \"founded\",\n        type: \"number\",\n        value: this.state.founded,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return UpdateTeam;\n}(Component);\n\nexport default compose(graphql(GET_TEAMS_QUERY, {\n  name: \"GET_TEAMS_QUERY\"\n}), graphql(UPDATE_TEAM_MUTATION, {\n  name: \"UPDATE_TEAM_MUTATION\"\n}), graphql(GET_TEAM_QUERY, {\n  name: \"GET_TEAM_QUERY\"\n}))(UpdateTeam);","map":{"version":3,"sources":["/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/UpdateTeam.js"],"names":["React","Component","graphql","compose","UPDATE_TEAM_MUTATION","GET_TEAMS_QUERY","GET_TEAM_QUERY","UpdateTeam","name","founded","teamId","event","target","value","type","Number","setState","selectedTeam","props","teams","find","team","console","log","id","state","preventDefault","variables","refetchQueries","query","data","loading","getTeamDetails","map","submitForm","e","showTeams","handleChange"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAgC,cAAhC;AACA,SAASC,oBAAT,EAA+BC,eAA/B,EAAgDC,cAAhD,QAAsE,oBAAtE;;IAEMC,U;;;;;;;;;;;;;;;;;;4DAGM;AACJC,MAAAA,IAAI,EAAG,MADH;AAEJC,MAAAA,OAAO,EAAG,IAFN;AAGJC,MAAAA,MAAM,EAAE;AAHJ,K;;mEAQO,UAACC,KAAD,EAAW;AAAA,0BACKA,KAAK,CAACC,MADX;AAAA,UAChBJ,IADgB,iBAChBA,IADgB;AAAA,UACVK,KADU,iBACVA,KADU;AAAA,UACHC,IADG,iBACHA,IADG;AAEtB,UAAIA,IAAI,KAAG,QAAX,EAAqBD,KAAK,GAAGE,MAAM,CAACF,KAAD,CAAd;;AACrB,YAAKG,QAAL,qBACKR,IADL,EACYK,KADZ;AAGH,K;;qEAEgB,YAAM;AACnB,UAAII,YAAY,GAAG,MAAKC,KAAL,CAAWb,eAAX,CAA2Bc,KAA3B,CAAiCC,IAAjC,CAAsC,UAAAC,IAAI,EAAI;AAC7DC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,EAAL,GAAU,GAAV,GAAgB,MAAKC,KAAL,CAAWf,MAAvC;AACA,eAAOW,IAAI,CAACG,EAAL,KAAY,MAAKC,KAAL,CAAWf,MAA9B;AACH,OAHkB,CAAnB;;AAIA,UAAGO,YAAH,EAAgB;AACZ,cAAKD,QAAL,CAAc;AACVR,UAAAA,IAAI,EAAES,YAAY,CAACT,IADT;AAEVC,UAAAA,OAAO,EAAEQ,YAAY,CAACR;AAFZ,SAAd,EAGGa,OAAO,CAACC,GAAR,CAAY,MAAKE,KAAL,CAAWjB,IAAvB,CAHH;AAIH;AACJ,K;;iEAiBY,UAACG,KAAD,EAAW;AACpBA,MAAAA,KAAK,CAACe,cAAN;;AACA,YAAKR,KAAL,CAAWd,oBAAX,CAAgC;AAC5BuB,QAAAA,SAAS,EAAE;AACPnB,UAAAA,IAAI,EAAE,MAAKiB,KAAL,CAAWjB,IADV;AAEPC,UAAAA,OAAO,EAAE,MAAKgB,KAAL,CAAWhB;AAFb,SADiB;AAK1BmB,QAAAA,cAAc,EAAE,CAAC;AAAEC,UAAAA,KAAK,EAAExB;AAAT,SAAD;AALU,OAAhC;AAOH,K;;;;;;;gCAtBW;AACR,UAAIyB,IAAI,GAAG,KAAKZ,KAAL,CAAWb,eAAtB;;AACA,UAAIyB,IAAI,CAACC,OAAT,EAAkB;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,OAFD,MAEO;AACP,aAAKS,cAAL;AACA,eAAO,KAAKd,KAAL,CAAWb,eAAX,CAA2Bc,KAA3B,CAAiCc,GAAjC,CAAqC,UAAAZ,IAAI,EAAI;AAC5C,iBAAQ;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,GAAG,EAAEA,IAAI,CAACG,EAAhC;AAAoC,YAAA,KAAK,EAAEH,IAAI,CAACG,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAqDH,IAAI,CAACb,IAA1D,CAAR;AACH,SAFE,CAAP;AAGC;AACJ;;;6BAeQ;AAAA;;AACL,aACA;AAAM,QAAA,QAAQ,EAAE,KAAK0B,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAQ,QAAA,QAAQ,EAAE,kBAACC,CAAD,EAAO;AACrB,UAAA,MAAI,CAACnB,QAAL,CAAc;AACVN,YAAAA,MAAM,EAAEyB,CAAC,CAACvB,MAAF,CAASC;AADP,WAAd;AAIH,SALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,KAAKuB,SAAL,EANJ,CAFJ,CAFJ,EAeI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE,KAAKX,KAAL,CAAWjB,IAHpB;AAIE,QAAA,QAAQ,EAAE,KAAK6B,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAfJ,EAwBI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWhB,OAHpB;AAIE,QAAA,QAAQ,EAAE,KAAK4B,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAxBJ,EAiCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjCJ,CADA;AAqCH;;;;EAjGoBpC,S;;AAoGzB,eAAeE,OAAO,CAClBD,OAAO,CAACG,eAAD,EAAkB;AAAEG,EAAAA,IAAI,EAAE;AAAR,CAAlB,CADW,EAElBN,OAAO,CAACE,oBAAD,EAAuB;AAAEI,EAAAA,IAAI,EAAE;AAAR,CAAvB,CAFW,EAGlBN,OAAO,CAACI,cAAD,EAAiB;AAAEE,EAAAA,IAAI,EAAE;AAAR,CAAjB,CAHW,CAAP,CAIbD,UAJa,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql, compose} from 'react-apollo'\r\nimport { UPDATE_TEAM_MUTATION, GET_TEAMS_QUERY, GET_TEAM_QUERY } from '../queries/queries'\r\n\r\nclass UpdateTeam extends Component {\r\n\r\n\r\n    state = {\r\n        name:  \"none\",\r\n        founded:  null,\r\n        teamId: null\r\n    }\r\n   \r\n    \r\n\r\n    handleChange = (event) => {\r\n        let { name, value, type} = event.target\r\n        if (type===\"number\") value = Number(value)\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    getTeamDetails = () => {\r\n        let selectedTeam = this.props.GET_TEAMS_QUERY.teams.find(team => {\r\n            console.log(team.id + \" \" + this.state.teamId)\r\n            return team.id === this.state.teamId\r\n        })\r\n        if(selectedTeam){\r\n            this.setState({\r\n                name: selectedTeam.name,\r\n                founded: selectedTeam.founded\r\n            }, console.log(this.state.name))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    showTeams() {\r\n        let data = this.props.GET_TEAMS_QUERY;\r\n        if (data.loading) {\r\n            console.log(\"Loading teams\")\r\n        } else {\r\n        this.getTeamDetails();\r\n        return this.props.GET_TEAMS_QUERY.teams.map(team => {\r\n                return (<option name=\"teamId\" key={team.id} value={team.id}>{team.name}</option>)\r\n            })\r\n        }\r\n    }\r\n    \r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.UPDATE_TEAM_MUTATION({\r\n            variables: {\r\n                name: this.state.name,\r\n                founded: this.state.founded\r\n            }\r\n            , refetchQueries: [{ query: GET_TEAMS_QUERY }]\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <form onSubmit={this.submitForm}>\r\n\r\n            <div className=\"field\">\r\n                <label>Team</label>\r\n                <select onChange={(e) => { \r\n                    this.setState({ \r\n                        teamId: e.target.value,\r\n                    }) \r\n        \r\n                }}>\r\n                   {this.showTeams()}\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"field\">\r\n              <label>Team Name:</label>\r\n              <input\r\n                name=\"name\"\r\n                type=\"text\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Founded:</label>\r\n              <input\r\n                name=\"founded\"\r\n                type=\"number\"\r\n                value={this.state.founded}\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <button>Add</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(GET_TEAMS_QUERY, { name: \"GET_TEAMS_QUERY\" }),\r\n    graphql(UPDATE_TEAM_MUTATION, { name: \"UPDATE_TEAM_MUTATION\" }),\r\n    graphql(GET_TEAM_QUERY, { name: \"GET_TEAM_QUERY\" })\r\n)(UpdateTeam);"]},"metadata":{},"sourceType":"module"}