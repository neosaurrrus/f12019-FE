{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DriverList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    {\\n        drivers {\\n            id\\n            firstName\\n            lastName\\n            nationality\\n            teamId {\\n                \\n            }\\n\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nvar GET_DRIVERS_QUERY = gql(_templateObject());\n\nvar DriverList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DriverList, _Component);\n\n  function DriverList() {\n    _classCallCheck(this, DriverList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DriverList).apply(this, arguments));\n  }\n\n  _createClass(DriverList, [{\n    key: \"allDrivers\",\n    value: function allDrivers() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \" Fetching Drivers\");\n      } else {\n        return data.drivers.map(function (driver) {\n          return React.createElement(\"li\", {\n            key: driver.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, \" \", driver.firstName, \" \", driver.lastName, \" - \", driver.nationality, \" - \", driver.teamId);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"driver-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.allDrivers()));\n    }\n  }]);\n\n  return DriverList;\n}(Component);\n\nexport default graphql(GET_DRIVERS_QUERY)(DriverList);","map":{"version":3,"sources":["/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/DriverList.js"],"names":["React","Component","gql","graphql","GET_DRIVERS_QUERY","DriverList","data","props","loading","drivers","map","driver","id","firstName","lastName","nationality","teamId","allDrivers"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAuB,cAAvB;AAEA,IAAMC,iBAAiB,GAAGF,GAAH,mBAAvB;;IAcMG,U;;;;;;;;;;;;;iCAEW;AACT,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,UAAIA,IAAI,CAACE,OAAT,EAAkB;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH,OAFD,MAEO;AACH,eAAOF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAiB,UAAAC,MAAM,EAAI;AAC9B,iBAAO;AAAI,YAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsBD,MAAM,CAACE,SAA7B,OAAyCF,MAAM,CAACG,QAAhD,SAA6DH,MAAM,CAACI,WAApE,SAAoFJ,MAAM,CAACK,MAA3F,CAAP;AACH,SAFM,CAAP;AAGH;AACJ;;;6BAEQ;AAEL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,aAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKC,UAAL,EADJ,CADJ,CADJ;AAOH;;;;EAtBoBhB,S;;AAyBzB,eAAeE,OAAO,CAACC,iBAAD,CAAP,CAA2BC,UAA3B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { gql } from 'apollo-boost'\r\nimport { graphql} from 'react-apollo'\r\n\r\nconst GET_DRIVERS_QUERY = gql`\r\n    {\r\n        drivers {\r\n            id\r\n            firstName\r\n            lastName\r\n            nationality\r\n            teamId {\r\n                \r\n            }\r\n\r\n        }\r\n    }\r\n`\r\nclass DriverList extends Component {\r\n\r\n    allDrivers() {\r\n        let data = this.props.data\r\n        if (data.loading) {\r\n            return <div> Fetching Drivers</div>\r\n        } else {\r\n            return data.drivers.map(driver => {\r\n                return <li key={driver.id}> {driver.firstName} {driver.lastName} - {driver.nationality} - {driver.teamId}</li>\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <ul id=\"driver-list\">\r\n                   {this.allDrivers()}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(GET_DRIVERS_QUERY)(DriverList);"]},"metadata":{},"sourceType":"module"}