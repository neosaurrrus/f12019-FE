{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/UpdateTeam.js\";\nimport React, { Component } from 'react';\nimport { graphql, compose } from 'react-apollo';\nimport { UPDATE_TEAM_MUTATION, GET_TEAMS_QUERY, GET_TEAM_QUERY } from '../queries/queries';\n\nvar UpdateTeam =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateTeam, _Component);\n\n  function UpdateTeam() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UpdateTeam);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UpdateTeam)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      name: _this.props.name || \"none\",\n      founded: _this.props.name || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value,\n          type = _event$target.type;\n      if (type === \"number\") value = Number(value);\n\n      _this.setState(_defineProperty({}, name, value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTeam\", function () {\n      var value = _this.state.teamId;\n\n      _this.props.GET_TEAM_QUERY({\n        variables: {\n          id: value\n        },\n        refetchQueries: [{\n          query: GET_TEAMS_QUERY\n        }]\n      });\n\n      console.log(data); // if (data.loading){\n      // } else {\n      //     this.setState({teamName: \"Hello\"})\n      // }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitForm\", function (event) {\n      event.preventDefault();\n\n      _this.props.UPDATE_TEAM_MUTATION({\n        variables: {\n          name: _this.state.name,\n          founded: _this.state.founded\n        },\n        refetchQueries: [{\n          query: GET_TEAMS_QUERY\n        }]\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(UpdateTeam, [{\n    key: \"showTeams\",\n    value: function showTeams() {\n      var data = this.props.GET_TEAMS_QUERY;\n\n      if (data.loading) {\n        return React.createElement(\"option\", {\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, \"Loading Teams...\");\n      } else {\n        return data.teams.map(function (team) {\n          return React.createElement(\"option\", {\n            name: \"teamId\",\n            key: team.id,\n            value: team.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, team.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.submitForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Team\"), React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          _this2.setState({\n            teamId: e.target.value\n          });\n\n          _this2.getTeam();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.showTeams())), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Team Name:\"), React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Founded:\"), React.createElement(\"input\", {\n        name: \"founded\",\n        type: \"number\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return UpdateTeam;\n}(Component);\n\nexport default compose(graphql(GET_TEAMS_QUERY, {\n  name: \"GET_TEAMS_QUERY\"\n}), graphql(UPDATE_TEAM_MUTATION, {\n  name: \"UPDATE_TEAM_MUTATION\"\n}), graphql(GET_TEAM_QUERY, {\n  name: \"GET_TEAM_QUERY\"\n}))(UpdateTeam);","map":{"version":3,"sources":["/mnt/c/Users/lukie/OneDrive/Dev/graphql/explorer/frontend/components/UpdateTeam.js"],"names":["React","Component","graphql","compose","UPDATE_TEAM_MUTATION","GET_TEAMS_QUERY","GET_TEAM_QUERY","UpdateTeam","name","props","founded","event","target","value","type","Number","setState","state","teamId","variables","id","refetchQueries","query","console","log","data","preventDefault","loading","teams","map","team","submitForm","e","getTeam","showTeams","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql, compose} from 'react-apollo'\r\nimport { UPDATE_TEAM_MUTATION, GET_TEAMS_QUERY, GET_TEAM_QUERY } from '../queries/queries'\r\n\r\nclass UpdateTeam extends Component {\r\n\r\n\r\n    state = {\r\n        name: this.props.name || \"none\",\r\n        founded: this.props.name || 0\r\n    }\r\n   \r\n    \r\n\r\n    handleChange = (event) => {\r\n        let { name, value, type} = event.target\r\n        if (type===\"number\") value = Number(value)\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    getTeam = () => {\r\n        let value = this.state.teamId;\r\n        this.props.GET_TEAM_QUERY({\r\n            variables: {\r\n                id: value\r\n            },\r\n            refetchQueries: [{ query: GET_TEAMS_QUERY }]\r\n        })\r\n        console.log(data)\r\n\r\n        // if (data.loading){\r\n            \r\n        // } else {\r\n        //     this.setState({teamName: \"Hello\"})\r\n        // }\r\n   \r\n    }\r\n\r\n\r\n\r\n\r\n    showTeams() {\r\n        let data = this.props.GET_TEAMS_QUERY\r\n        if (data.loading) {\r\n            return (<option disabled>Loading Teams...</option>)\r\n        } else {\r\n            return data.teams.map(team => {\r\n                return (<option name=\"teamId\" key={team.id} value={team.id}>{team.name}</option>)\r\n            })\r\n        }\r\n    }\r\n\r\n    submitForm = (event) => {\r\n        event.preventDefault();\r\n        this.props.UPDATE_TEAM_MUTATION({\r\n            variables: {\r\n                name: this.state.name,\r\n                founded: this.state.founded\r\n            }\r\n            , refetchQueries: [{ query: GET_TEAMS_QUERY }]\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <form onSubmit={this.submitForm}>\r\n\r\n            <div className=\"field\">\r\n                <label>Team</label>\r\n                <select onChange={(e) => { \r\n                    this.setState({ teamId: e.target.value }) \r\n                    this.getTeam()\r\n                    }}>\r\n                    {this.showTeams()}\r\n                </select>\r\n            </div>\r\n\r\n\r\n            <div className=\"field\">\r\n              <label>Team Name:</label>\r\n              <input\r\n                name=\"name\"\r\n                type=\"text\"\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <label>Founded:</label>\r\n              <input\r\n                name=\"founded\"\r\n                type=\"number\"\r\n\r\n                onChange={this.handleChange}\r\n              />\r\n            </div>\r\n            <button>Add</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    graphql(GET_TEAMS_QUERY, { name: \"GET_TEAMS_QUERY\" }),\r\n    graphql(UPDATE_TEAM_MUTATION, { name: \"UPDATE_TEAM_MUTATION\" }),\r\n    graphql(GET_TEAM_QUERY, { name: \"GET_TEAM_QUERY\" })\r\n)(UpdateTeam);"]},"metadata":{},"sourceType":"module"}